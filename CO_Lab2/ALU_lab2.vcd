$date
	Sat Jul 24 04:48:35 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TestBench $end
$var wire 1 ! zero $end
$var wire 5 " shamt [4:0] $end
$var wire 32 # sftSrc [31:0] $end
$var wire 32 $ result_Shifter [31:0] $end
$var wire 32 % result_ALU [31:0] $end
$var wire 1 & overflow $end
$var wire 2 ' operation [1:0] $end
$var wire 1 ( leftRight $end
$var wire 1 ) invertB $end
$var wire 1 * invertA $end
$var wire 32 + aluSrc2 [31:0] $end
$var wire 32 , aluSrc1 [31:0] $end
$var reg 34 - ans_ALU [33:0] $end
$var reg 34 . ans_Shifter [33:0] $end
$var reg 1 / clk $end
$var reg 68 0 inp_ALU [67:0] $end
$var reg 68 1 inp_Shifter [67:0] $end
$var integer 32 2 i [31:0] $end
$var integer 32 3 score [31:0] $end
$scope module alu $end
$var wire 32 4 aluSrc1 [31:0] $end
$var wire 32 5 aluSrc2 [31:0] $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 2 6 operation [1:0] $end
$var wire 1 & overflow $end
$var wire 1 7 set $end
$var wire 1 ! zero $end
$var wire 32 8 result [31:0] $end
$var wire 32 9 carry [32:1] $end
$var reg 1 : SET $end
$var reg 1 ; Zero $end
$scope begin genblk1[1] $end
$scope module ALU_bit $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ? less $end
$var wire 2 @ operation [1:0] $end
$var wire 1 A result $end
$var wire 1 B carryOut $end
$var wire 1 C add $end
$var reg 1 D A $end
$var reg 1 E B $end
$var reg 1 A Result $end
$scope module M $end
$var wire 1 > carryIn $end
$var wire 1 B carryOut $end
$var wire 1 D input1 $end
$var wire 1 E input2 $end
$var wire 1 C sum $end
$var wire 1 F w1 $end
$var wire 1 G w2 $end
$var wire 1 H w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module ALU_bit $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 L less $end
$var wire 2 M operation [1:0] $end
$var wire 1 N result $end
$var wire 1 O carryOut $end
$var wire 1 P add $end
$var reg 1 Q A $end
$var reg 1 R B $end
$var reg 1 N Result $end
$scope module M $end
$var wire 1 K carryIn $end
$var wire 1 O carryOut $end
$var wire 1 Q input1 $end
$var wire 1 R input2 $end
$var wire 1 P sum $end
$var wire 1 S w1 $end
$var wire 1 T w2 $end
$var wire 1 U w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module ALU_bit $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 Y less $end
$var wire 2 Z operation [1:0] $end
$var wire 1 [ result $end
$var wire 1 \ carryOut $end
$var wire 1 ] add $end
$var reg 1 ^ A $end
$var reg 1 _ B $end
$var reg 1 [ Result $end
$scope module M $end
$var wire 1 X carryIn $end
$var wire 1 \ carryOut $end
$var wire 1 ^ input1 $end
$var wire 1 _ input2 $end
$var wire 1 ] sum $end
$var wire 1 ` w1 $end
$var wire 1 a w2 $end
$var wire 1 b w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module ALU_bit $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 e carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 f less $end
$var wire 2 g operation [1:0] $end
$var wire 1 h result $end
$var wire 1 i carryOut $end
$var wire 1 j add $end
$var reg 1 k A $end
$var reg 1 l B $end
$var reg 1 h Result $end
$scope module M $end
$var wire 1 e carryIn $end
$var wire 1 i carryOut $end
$var wire 1 k input1 $end
$var wire 1 l input2 $end
$var wire 1 j sum $end
$var wire 1 m w1 $end
$var wire 1 n w2 $end
$var wire 1 o w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module ALU_bit $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 s less $end
$var wire 2 t operation [1:0] $end
$var wire 1 u result $end
$var wire 1 v carryOut $end
$var wire 1 w add $end
$var reg 1 x A $end
$var reg 1 y B $end
$var reg 1 u Result $end
$scope module M $end
$var wire 1 r carryIn $end
$var wire 1 v carryOut $end
$var wire 1 x input1 $end
$var wire 1 y input2 $end
$var wire 1 w sum $end
$var wire 1 z w1 $end
$var wire 1 { w2 $end
$var wire 1 | w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module ALU_bit $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 !" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 "" less $end
$var wire 2 #" operation [1:0] $end
$var wire 1 $" result $end
$var wire 1 %" carryOut $end
$var wire 1 &" add $end
$var reg 1 '" A $end
$var reg 1 (" B $end
$var reg 1 $" Result $end
$scope module M $end
$var wire 1 !" carryIn $end
$var wire 1 %" carryOut $end
$var wire 1 '" input1 $end
$var wire 1 (" input2 $end
$var wire 1 &" sum $end
$var wire 1 )" w1 $end
$var wire 1 *" w2 $end
$var wire 1 +" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module ALU_bit $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 /" less $end
$var wire 2 0" operation [1:0] $end
$var wire 1 1" result $end
$var wire 1 2" carryOut $end
$var wire 1 3" add $end
$var reg 1 4" A $end
$var reg 1 5" B $end
$var reg 1 1" Result $end
$scope module M $end
$var wire 1 ." carryIn $end
$var wire 1 2" carryOut $end
$var wire 1 4" input1 $end
$var wire 1 5" input2 $end
$var wire 1 3" sum $end
$var wire 1 6" w1 $end
$var wire 1 7" w2 $end
$var wire 1 8" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module ALU_bit $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 ;" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 <" less $end
$var wire 2 =" operation [1:0] $end
$var wire 1 >" result $end
$var wire 1 ?" carryOut $end
$var wire 1 @" add $end
$var reg 1 A" A $end
$var reg 1 B" B $end
$var reg 1 >" Result $end
$scope module M $end
$var wire 1 ;" carryIn $end
$var wire 1 ?" carryOut $end
$var wire 1 A" input1 $end
$var wire 1 B" input2 $end
$var wire 1 @" sum $end
$var wire 1 C" w1 $end
$var wire 1 D" w2 $end
$var wire 1 E" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module ALU_bit $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 H" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 I" less $end
$var wire 2 J" operation [1:0] $end
$var wire 1 K" result $end
$var wire 1 L" carryOut $end
$var wire 1 M" add $end
$var reg 1 N" A $end
$var reg 1 O" B $end
$var reg 1 K" Result $end
$scope module M $end
$var wire 1 H" carryIn $end
$var wire 1 L" carryOut $end
$var wire 1 N" input1 $end
$var wire 1 O" input2 $end
$var wire 1 M" sum $end
$var wire 1 P" w1 $end
$var wire 1 Q" w2 $end
$var wire 1 R" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module ALU_bit $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 V" less $end
$var wire 2 W" operation [1:0] $end
$var wire 1 X" result $end
$var wire 1 Y" carryOut $end
$var wire 1 Z" add $end
$var reg 1 [" A $end
$var reg 1 \" B $end
$var reg 1 X" Result $end
$scope module M $end
$var wire 1 U" carryIn $end
$var wire 1 Y" carryOut $end
$var wire 1 [" input1 $end
$var wire 1 \" input2 $end
$var wire 1 Z" sum $end
$var wire 1 ]" w1 $end
$var wire 1 ^" w2 $end
$var wire 1 _" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module ALU_bit $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 b" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 c" less $end
$var wire 2 d" operation [1:0] $end
$var wire 1 e" result $end
$var wire 1 f" carryOut $end
$var wire 1 g" add $end
$var reg 1 h" A $end
$var reg 1 i" B $end
$var reg 1 e" Result $end
$scope module M $end
$var wire 1 b" carryIn $end
$var wire 1 f" carryOut $end
$var wire 1 h" input1 $end
$var wire 1 i" input2 $end
$var wire 1 g" sum $end
$var wire 1 j" w1 $end
$var wire 1 k" w2 $end
$var wire 1 l" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module ALU_bit $end
$var wire 1 m" a $end
$var wire 1 n" b $end
$var wire 1 o" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 p" less $end
$var wire 2 q" operation [1:0] $end
$var wire 1 r" result $end
$var wire 1 s" carryOut $end
$var wire 1 t" add $end
$var reg 1 u" A $end
$var reg 1 v" B $end
$var reg 1 r" Result $end
$scope module M $end
$var wire 1 o" carryIn $end
$var wire 1 s" carryOut $end
$var wire 1 u" input1 $end
$var wire 1 v" input2 $end
$var wire 1 t" sum $end
$var wire 1 w" w1 $end
$var wire 1 x" w2 $end
$var wire 1 y" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module ALU_bit $end
$var wire 1 z" a $end
$var wire 1 {" b $end
$var wire 1 |" carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 }" less $end
$var wire 2 ~" operation [1:0] $end
$var wire 1 !# result $end
$var wire 1 "# carryOut $end
$var wire 1 ## add $end
$var reg 1 $# A $end
$var reg 1 %# B $end
$var reg 1 !# Result $end
$scope module M $end
$var wire 1 |" carryIn $end
$var wire 1 "# carryOut $end
$var wire 1 $# input1 $end
$var wire 1 %# input2 $end
$var wire 1 ## sum $end
$var wire 1 &# w1 $end
$var wire 1 '# w2 $end
$var wire 1 (# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module ALU_bit $end
$var wire 1 )# a $end
$var wire 1 *# b $end
$var wire 1 +# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ,# less $end
$var wire 2 -# operation [1:0] $end
$var wire 1 .# result $end
$var wire 1 /# carryOut $end
$var wire 1 0# add $end
$var reg 1 1# A $end
$var reg 1 2# B $end
$var reg 1 .# Result $end
$scope module M $end
$var wire 1 +# carryIn $end
$var wire 1 /# carryOut $end
$var wire 1 1# input1 $end
$var wire 1 2# input2 $end
$var wire 1 0# sum $end
$var wire 1 3# w1 $end
$var wire 1 4# w2 $end
$var wire 1 5# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module ALU_bit $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 9# less $end
$var wire 2 :# operation [1:0] $end
$var wire 1 ;# result $end
$var wire 1 <# carryOut $end
$var wire 1 =# add $end
$var reg 1 ># A $end
$var reg 1 ?# B $end
$var reg 1 ;# Result $end
$scope module M $end
$var wire 1 8# carryIn $end
$var wire 1 <# carryOut $end
$var wire 1 ># input1 $end
$var wire 1 ?# input2 $end
$var wire 1 =# sum $end
$var wire 1 @# w1 $end
$var wire 1 A# w2 $end
$var wire 1 B# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module ALU_bit $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 F# less $end
$var wire 2 G# operation [1:0] $end
$var wire 1 H# result $end
$var wire 1 I# carryOut $end
$var wire 1 J# add $end
$var reg 1 K# A $end
$var reg 1 L# B $end
$var reg 1 H# Result $end
$scope module M $end
$var wire 1 E# carryIn $end
$var wire 1 I# carryOut $end
$var wire 1 K# input1 $end
$var wire 1 L# input2 $end
$var wire 1 J# sum $end
$var wire 1 M# w1 $end
$var wire 1 N# w2 $end
$var wire 1 O# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module ALU_bit $end
$var wire 1 P# a $end
$var wire 1 Q# b $end
$var wire 1 R# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 S# less $end
$var wire 2 T# operation [1:0] $end
$var wire 1 U# result $end
$var wire 1 V# carryOut $end
$var wire 1 W# add $end
$var reg 1 X# A $end
$var reg 1 Y# B $end
$var reg 1 U# Result $end
$scope module M $end
$var wire 1 R# carryIn $end
$var wire 1 V# carryOut $end
$var wire 1 X# input1 $end
$var wire 1 Y# input2 $end
$var wire 1 W# sum $end
$var wire 1 Z# w1 $end
$var wire 1 [# w2 $end
$var wire 1 \# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module ALU_bit $end
$var wire 1 ]# a $end
$var wire 1 ^# b $end
$var wire 1 _# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 `# less $end
$var wire 2 a# operation [1:0] $end
$var wire 1 b# result $end
$var wire 1 c# carryOut $end
$var wire 1 d# add $end
$var reg 1 e# A $end
$var reg 1 f# B $end
$var reg 1 b# Result $end
$scope module M $end
$var wire 1 _# carryIn $end
$var wire 1 c# carryOut $end
$var wire 1 e# input1 $end
$var wire 1 f# input2 $end
$var wire 1 d# sum $end
$var wire 1 g# w1 $end
$var wire 1 h# w2 $end
$var wire 1 i# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module ALU_bit $end
$var wire 1 j# a $end
$var wire 1 k# b $end
$var wire 1 l# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 m# less $end
$var wire 2 n# operation [1:0] $end
$var wire 1 o# result $end
$var wire 1 p# carryOut $end
$var wire 1 q# add $end
$var reg 1 r# A $end
$var reg 1 s# B $end
$var reg 1 o# Result $end
$scope module M $end
$var wire 1 l# carryIn $end
$var wire 1 p# carryOut $end
$var wire 1 r# input1 $end
$var wire 1 s# input2 $end
$var wire 1 q# sum $end
$var wire 1 t# w1 $end
$var wire 1 u# w2 $end
$var wire 1 v# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module ALU_bit $end
$var wire 1 w# a $end
$var wire 1 x# b $end
$var wire 1 y# carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 z# less $end
$var wire 2 {# operation [1:0] $end
$var wire 1 |# result $end
$var wire 1 }# carryOut $end
$var wire 1 ~# add $end
$var reg 1 !$ A $end
$var reg 1 "$ B $end
$var reg 1 |# Result $end
$scope module M $end
$var wire 1 y# carryIn $end
$var wire 1 }# carryOut $end
$var wire 1 !$ input1 $end
$var wire 1 "$ input2 $end
$var wire 1 ~# sum $end
$var wire 1 #$ w1 $end
$var wire 1 $$ w2 $end
$var wire 1 %$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module ALU_bit $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 )$ less $end
$var wire 2 *$ operation [1:0] $end
$var wire 1 +$ result $end
$var wire 1 ,$ carryOut $end
$var wire 1 -$ add $end
$var reg 1 .$ A $end
$var reg 1 /$ B $end
$var reg 1 +$ Result $end
$scope module M $end
$var wire 1 ($ carryIn $end
$var wire 1 ,$ carryOut $end
$var wire 1 .$ input1 $end
$var wire 1 /$ input2 $end
$var wire 1 -$ sum $end
$var wire 1 0$ w1 $end
$var wire 1 1$ w2 $end
$var wire 1 2$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module ALU_bit $end
$var wire 1 3$ a $end
$var wire 1 4$ b $end
$var wire 1 5$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 6$ less $end
$var wire 2 7$ operation [1:0] $end
$var wire 1 8$ result $end
$var wire 1 9$ carryOut $end
$var wire 1 :$ add $end
$var reg 1 ;$ A $end
$var reg 1 <$ B $end
$var reg 1 8$ Result $end
$scope module M $end
$var wire 1 5$ carryIn $end
$var wire 1 9$ carryOut $end
$var wire 1 ;$ input1 $end
$var wire 1 <$ input2 $end
$var wire 1 :$ sum $end
$var wire 1 =$ w1 $end
$var wire 1 >$ w2 $end
$var wire 1 ?$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module ALU_bit $end
$var wire 1 @$ a $end
$var wire 1 A$ b $end
$var wire 1 B$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 C$ less $end
$var wire 2 D$ operation [1:0] $end
$var wire 1 E$ result $end
$var wire 1 F$ carryOut $end
$var wire 1 G$ add $end
$var reg 1 H$ A $end
$var reg 1 I$ B $end
$var reg 1 E$ Result $end
$scope module M $end
$var wire 1 B$ carryIn $end
$var wire 1 F$ carryOut $end
$var wire 1 H$ input1 $end
$var wire 1 I$ input2 $end
$var wire 1 G$ sum $end
$var wire 1 J$ w1 $end
$var wire 1 K$ w2 $end
$var wire 1 L$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module ALU_bit $end
$var wire 1 M$ a $end
$var wire 1 N$ b $end
$var wire 1 O$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 P$ less $end
$var wire 2 Q$ operation [1:0] $end
$var wire 1 R$ result $end
$var wire 1 S$ carryOut $end
$var wire 1 T$ add $end
$var reg 1 U$ A $end
$var reg 1 V$ B $end
$var reg 1 R$ Result $end
$scope module M $end
$var wire 1 O$ carryIn $end
$var wire 1 S$ carryOut $end
$var wire 1 U$ input1 $end
$var wire 1 V$ input2 $end
$var wire 1 T$ sum $end
$var wire 1 W$ w1 $end
$var wire 1 X$ w2 $end
$var wire 1 Y$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module ALU_bit $end
$var wire 1 Z$ a $end
$var wire 1 [$ b $end
$var wire 1 \$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 ]$ less $end
$var wire 2 ^$ operation [1:0] $end
$var wire 1 _$ result $end
$var wire 1 `$ carryOut $end
$var wire 1 a$ add $end
$var reg 1 b$ A $end
$var reg 1 c$ B $end
$var reg 1 _$ Result $end
$scope module M $end
$var wire 1 \$ carryIn $end
$var wire 1 `$ carryOut $end
$var wire 1 b$ input1 $end
$var wire 1 c$ input2 $end
$var wire 1 a$ sum $end
$var wire 1 d$ w1 $end
$var wire 1 e$ w2 $end
$var wire 1 f$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module ALU_bit $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 i$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 j$ less $end
$var wire 2 k$ operation [1:0] $end
$var wire 1 l$ result $end
$var wire 1 m$ carryOut $end
$var wire 1 n$ add $end
$var reg 1 o$ A $end
$var reg 1 p$ B $end
$var reg 1 l$ Result $end
$scope module M $end
$var wire 1 i$ carryIn $end
$var wire 1 m$ carryOut $end
$var wire 1 o$ input1 $end
$var wire 1 p$ input2 $end
$var wire 1 n$ sum $end
$var wire 1 q$ w1 $end
$var wire 1 r$ w2 $end
$var wire 1 s$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module ALU_bit $end
$var wire 1 t$ a $end
$var wire 1 u$ b $end
$var wire 1 v$ carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 w$ less $end
$var wire 2 x$ operation [1:0] $end
$var wire 1 y$ result $end
$var wire 1 z$ carryOut $end
$var wire 1 {$ add $end
$var reg 1 |$ A $end
$var reg 1 }$ B $end
$var reg 1 y$ Result $end
$scope module M $end
$var wire 1 v$ carryIn $end
$var wire 1 z$ carryOut $end
$var wire 1 |$ input1 $end
$var wire 1 }$ input2 $end
$var wire 1 {$ sum $end
$var wire 1 ~$ w1 $end
$var wire 1 !% w2 $end
$var wire 1 "% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module ALU_bit $end
$var wire 1 #% a $end
$var wire 1 $% b $end
$var wire 1 %% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 &% less $end
$var wire 2 '% operation [1:0] $end
$var wire 1 (% result $end
$var wire 1 )% carryOut $end
$var wire 1 *% add $end
$var reg 1 +% A $end
$var reg 1 ,% B $end
$var reg 1 (% Result $end
$scope module M $end
$var wire 1 %% carryIn $end
$var wire 1 )% carryOut $end
$var wire 1 +% input1 $end
$var wire 1 ,% input2 $end
$var wire 1 *% sum $end
$var wire 1 -% w1 $end
$var wire 1 .% w2 $end
$var wire 1 /% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module ALU_bit $end
$var wire 1 0% a $end
$var wire 1 1% b $end
$var wire 1 2% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 3% less $end
$var wire 2 4% operation [1:0] $end
$var wire 1 5% result $end
$var wire 1 6% carryOut $end
$var wire 1 7% add $end
$var reg 1 8% A $end
$var reg 1 9% B $end
$var reg 1 5% Result $end
$scope module M $end
$var wire 1 2% carryIn $end
$var wire 1 6% carryOut $end
$var wire 1 8% input1 $end
$var wire 1 9% input2 $end
$var wire 1 7% sum $end
$var wire 1 :% w1 $end
$var wire 1 ;% w2 $end
$var wire 1 <% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module ALU_bit $end
$var wire 1 =% a $end
$var wire 1 >% b $end
$var wire 1 ?% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 @% less $end
$var wire 2 A% operation [1:0] $end
$var wire 1 B% result $end
$var wire 1 C% carryOut $end
$var wire 1 D% add $end
$var reg 1 E% A $end
$var reg 1 F% B $end
$var reg 1 B% Result $end
$scope module M $end
$var wire 1 ?% carryIn $end
$var wire 1 C% carryOut $end
$var wire 1 E% input1 $end
$var wire 1 F% input2 $end
$var wire 1 D% sum $end
$var wire 1 G% w1 $end
$var wire 1 H% w2 $end
$var wire 1 I% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module ALU_bit $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 L% carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 M% less $end
$var wire 2 N% operation [1:0] $end
$var wire 1 O% result $end
$var wire 1 P% carryOut $end
$var wire 1 Q% add $end
$var reg 1 R% A $end
$var reg 1 S% B $end
$var reg 1 O% Result $end
$scope module M $end
$var wire 1 L% carryIn $end
$var wire 1 P% carryOut $end
$var wire 1 R% input1 $end
$var wire 1 S% input2 $end
$var wire 1 Q% sum $end
$var wire 1 T% w1 $end
$var wire 1 U% w2 $end
$var wire 1 V% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module ALU0 $end
$var wire 1 W% a $end
$var wire 1 X% b $end
$var wire 1 ) carryIn $end
$var wire 1 * invertA $end
$var wire 1 ) invertB $end
$var wire 1 7 less $end
$var wire 2 Y% operation [1:0] $end
$var wire 1 Z% result $end
$var wire 1 [% carryOut $end
$var wire 1 \% add $end
$var reg 1 ]% A $end
$var reg 1 ^% B $end
$var reg 1 Z% Result $end
$scope module M $end
$var wire 1 ) carryIn $end
$var wire 1 [% carryOut $end
$var wire 1 ]% input1 $end
$var wire 1 ^% input2 $end
$var wire 1 \% sum $end
$var wire 1 _% w1 $end
$var wire 1 `% w2 $end
$var wire 1 a% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope module shifter $end
$var wire 1 ( leftRight $end
$var wire 32 b% result [31:0] $end
$var wire 32 c% sftSrc [31:0] $end
$var wire 5 d% shamt [4:0] $end
$var reg 32 e% Result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx e%
bx d%
bx c%
bx b%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
bx Y%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
bx N%
0M%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
bx A%
0@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
bx 4%
03%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
bx '%
0&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
bx x$
0w$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
bx k$
0j$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
bx ^$
0]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
bx Q$
0P$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
bx D$
0C$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
bx 7$
06$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
bx *$
0)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
bx {#
0z#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
bx n#
0m#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
bx a#
0`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
bx T#
0S#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
bx G#
0F#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
bx :#
09#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
bx -#
0,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
bx ~"
0}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
bx q"
0p"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
bx d"
0c"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
bx W"
0V"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
bx J"
0I"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
bx ="
0<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
bx 0"
0/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
bx #"
0""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
bx t
0s
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
bx g
0f
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
bx Z
0Y
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
bx M
0L
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
bx @
0?
x>
x=
x<
x;
x:
bx 9
bx 8
x7
bx 6
bx 5
bx 4
b0 3
b0 2
bx 1
bx 0
0/
bx .
bx -
bx ,
bx +
x*
x)
x(
bx '
x&
bx %
bx $
bx #
bx "
x!
$end
#5000
1/
#10000
1T$
1O$
1F$
1P%
13"
0G$
1L$
0Q%
1V%
1."
1B$
1L%
1%"
0=#
0d#
19$
0n$
0*%
1C%
1j
0&"
1+"
1g"
08#
0_#
0:$
1?$
0i$
0%%
0D%
1I%
1e
1!"
1b"
0/#
0V#
15$
0`$
0z$
1?%
0P
1\
1v
1Y"
10#
05#
0J#
1W#
0\#
1,$
1a$
0f$
1{$
0"%
16%
0K
0]
1b
0w
1|
1@"
1M"
0Z"
1_"
1t"
1##
0+#
0E#
0R#
1q#
1~#
0-$
12$
0\$
0v$
07%
1<%
1C
0B
1X
1r
1;"
1H"
1U"
1o"
1|"
0"#
0<#
0I#
1l#
1y#
1($
0S$
0m$
12%
1>
0H
0U
1O
0o
1i
08"
12"
0E"
1?"
0R"
1L"
0l"
1f"
0y"
1s"
0(#
0B#
0O#
0i#
1c#
0v#
1p#
0%$
1}#
0Y$
0s$
0/%
1)%
1\%
0a%
b11110000111111000001111111111101 9
1[%
0F
0G
0S
1T
1`
0a
0m
1n
1z
0{
1)"
0*"
06"
17"
0C"
1D"
0P"
1Q"
1]"
0^"
0j"
1k"
0w"
1x"
0&#
0'#
13#
04#
0@#
0A#
0M#
0N#
1Z#
0[#
0g#
1h#
0t#
1u#
0#$
1$$
10$
01$
1=$
0>$
1J$
0K$
0W$
0X$
1d$
0e$
0q$
0r$
1~$
0!%
0-%
1.%
1:%
0;%
1G%
0H%
1T%
0U%
0_%
1`%
0&
0D
1Q
1^
1k
1x
0'"
14"
1A"
1N"
0["
1h"
1u"
0$#
01#
0>#
0K#
1X#
1e#
1r#
1!$
1.$
1;$
0H$
0U$
1b$
0o$
1|$
1+%
08%
1E%
1R%
1]%
0Z%
0E
1R
0_
1l
0y
1("
15"
1B"
1O"
1\"
1i"
1v"
0%#
12#
0?#
0L#
0Y#
1f#
1s#
1"$
0/$
0<$
1I$
0V$
0c$
0p$
0}$
1,%
19%
0F%
0S%
1^%
1!
1;
b10010110010111001000011101000 $
b10010110010111001000011101000 b%
b10010110010111001000011101000 e%
0<
1I
1V
1c
1p
0}
1,"
19"
1F"
0S"
1`"
1m"
0z"
0)#
06#
0C#
1P#
1]#
1j#
1w#
1&$
13$
0@$
0M$
1Z$
0g$
1t$
1#%
00%
1=%
1J%
1W%
07
0:
1=
0J
1W
0d
1q
0~
0-"
0:"
0G"
0T"
0a"
0n"
1{"
0*#
17#
1D#
1Q#
0^#
0k#
0x#
1'$
14$
0A$
1N$
1[$
1h$
1u$
0$%
01%
1>%
1K%
0X%
0A
0N
0[
0h
0u
0$"
01"
0>"
0K"
0X"
0e"
0r"
0!#
0.#
0;#
0H#
0U#
0b#
0o#
0|#
0+$
08$
0E$
0R$
0_$
0l$
0y$
0(%
05%
0B%
b0 %
b0 8
0O%
1(
b0 "
b0 d%
b10010110010111001000011101000 #
b10010110010111001000011101000 c%
b11011010011111100001101110111101 ,
b11011010011111100001101110111101 4
b11001111011000111010000000101010 +
b11001111011000111010000000101010 5
0*
1)
b11 '
b11 6
b11 @
b11 M
b11 Z
b11 g
b11 t
b11 #"
b11 0"
b11 ="
b11 J"
b11 W"
b11 d"
b11 q"
b11 ~"
b11 -#
b11 :#
b11 G#
b11 T#
b11 a#
b11 n#
b11 {#
b11 *$
b11 7$
b11 D$
b11 Q$
b11 ^$
b11 k$
b11 x$
b11 '%
b11 4%
b11 A%
b11 N%
b11 Y%
b1 2
b10000000010010110010111001000011101000 1
b10010110010111001000011101000 .
b1111101101001111110000110111011110111001111011000111010000000101010 0
b100000000000000000000000000000000 -
0/
#11000
b1 3
#12000
b10 3
#15000
1/
#20000
0v$
1U
0m$
1K
0e
0!"
0."
1+#
0i#
05$
0B$
0O$
1\$
0s$
1?%
1L%
1B
1X
0\
0r
0v
0%"
0;"
0H"
1U"
1o"
1|"
1"#
0_#
0l#
0y#
0($
0,$
09$
0F$
1S$
0i$
1%%
12%
16%
1C%
0P%
1>
1'#
1X$
1^"
0C
1H
0P
1O
1]
0b
1j
0o
0i
1w
0|
1&"
0+"
03"
08"
02"
1@"
0E"
0?"
0M"
0R"
1L"
1Z"
0_"
0g"
1l"
1f"
1t"
0y"
1s"
1##
0(#
10#
1=#
0J#
1W#
0V#
1d#
0c#
0q#
0v#
0p#
1~#
0%$
0}#
1-$
02$
1:$
0?$
1G$
0L$
0T$
0Y$
1a$
0`$
1n$
0{$
1z$
1*%
1)%
07%
1<%
0D%
1I%
1Q%
0V%
b1111001000000000011111000000111 9
1[%
1D
0Q
0^
0x
1'"
04"
1["
1$#
0X#
0e#
0r#
0.$
0;$
1U$
0b$
18%
0E%
0R%
1F
1A
1S
0T
0`
0a
1m
0n
1z
0{
1)"
06"
07"
1C"
0D"
0P"
1Q"
0]"
1j"
0k"
0w"
1x"
0&#
1!#
03#
1@#
1;#
0M#
0H#
1Z#
0[#
1g#
0h#
0t#
0u#
1#$
0$$
10$
01$
1=$
0>$
1J$
0W$
1R$
0d$
0e$
1q$
1l$
0~$
1!%
0-%
1.%
1:%
1G%
0H%
0T%
0U%
0_%
1`%
0!
0;
b10010010010110110000001011100100 $
b10010010010110110000001011100100 b%
b10010010010110110000001011100100 e%
1<
0I
0V
0p
1}
0,"
1S"
1z"
0P#
0]#
0j#
0&$
03$
1M$
0Z$
10%
0=%
0J%
17
1:
0=
1J
0W
1G"
1T"
1n"
0D#
1^#
1A$
0[$
1$%
0K%
1X%
0\%
0E
1R
0_
0l
1y
0("
05"
0B"
1O"
1\"
0i"
1v"
1%#
02#
1?#
0L#
1Y#
1f#
0s#
0"$
1/$
1<$
1I$
1V$
0c$
1p$
1}$
1,%
09%
1F%
0S%
1^%
1Z%
1N
0[
1h
1u
1$"
01"
1>"
1K"
1X"
1e"
1r"
0.#
1U#
1b#
0o#
1|#
1+$
18$
1E$
0_$
1y$
1(%
15%
1B%
b1111101111101101011111101110111 %
b1111101111101101011111101110111 8
0O%
0(
b10010010010110110000001011100100 #
b10010010010110110000001011100100 c%
b111001000100000011111101010011 ,
b111001000100000011111101010011 4
b1011101111001101011011000100101 +
b1011101111001101011011000100101 5
0)
b0 '
b0 6
b0 @
b0 M
b0 Z
b0 g
b0 t
b0 #"
b0 0"
b0 ="
b0 J"
b0 W"
b0 d"
b0 q"
b0 ~"
b0 -#
b0 :#
b0 G#
b0 T#
b0 a#
b0 n#
b0 {#
b0 *$
b0 7$
b0 D$
b0 Q$
b0 ^$
b0 k$
b0 x$
b0 '%
b0 4%
b0 A%
b0 N%
b0 Y%
b10 2
b10010010010110110000001011100100 1
b10010010010110110000001011100100 .
b11100100010000001111110101001101011101111001101011011000100101 0
b1111101111101101011111101110111 -
0/
#21000
b11 3
#22000
b100 3
#25000
1/
#30000
1Y$
1O$
1E"
1F$
1;"
1%$
1+"
1L$
12"
1y#
1!"
15$
1B$
0K
1e
18"
1R"
0o"
18#
1i$
1L%
1p#
1v
1,$
19$
0B
1\
1h
1r
1."
01"
1H"
1U"
0X"
1b"
0f"
0|"
1!#
0+#
1/#
1;#
1H#
0b#
1($
1\$
1`$
1l$
1%%
12%
1C%
1P%
1>
0r"
14#
1u#
0o#
1e$
1T
1{
1u
0$"
0>"
1U#
0|#
11$
1+$
1>$
18$
0E$
0(%
1C
0H
0P
0U
0]
1b
1j
1i
1w
0&"
1%"
03"
0@"
1?"
0M"
1L"
0Z"
1_"
1Y"
1g"
0l"
0t"
0y"
0s"
1##
0(#
0"#
00#
05#
1=#
1J#
1W#
0d#
0q#
0~#
1}#
1-$
1:$
0G$
0T$
1S$
1a$
0f$
1n$
0{$
1z$
0*%
1/%
1)%
17%
0<%
0D%
1I%
0Q%
1V%
1a%
b11111011111110000100011111111101 9
1[%
0&
0D
1Q
1x
0N"
0h"
0u"
11#
1r#
1.$
1;$
0U$
1b$
0+%
0]%
0F
0G
0S
1`
0m
1n
0z
1)"
0*"
16"
1C"
0D"
1P"
0Q"
1]"
0^"
0j"
0k"
0w"
0x"
1&#
0'#
03#
0@#
1M#
1Z#
0g#
0t#
1#$
0$$
00$
0=$
1J$
1W$
0X$
0d$
0q$
0~$
1!%
1-%
0.%
0:%
1;%
1G%
1T%
1_%
0`%
b11011100011111101110001000110100 $
b11011100011111101110001000110100 b%
b11011100011111101110001000110100 e%
0<
1I
1p
0F"
0`"
0m"
1)#
1j#
1&$
13$
0M$
1Z$
0#%
0W%
07
0:
1=
0J
0q
1~
1:"
0G"
1a"
0Q#
1x#
0'$
04$
0A$
0N$
0u$
0$%
0>%
0X%
0\%
0E
1R
1_
1l
1y
0("
15"
0B"
1O"
0\"
0i"
0v"
0%#
12#
0?#
1L#
1Y#
0f#
1s#
0"$
1/$
1<$
1I$
1V$
1c$
0p$
1}$
1,%
19%
1F%
1S%
1^%
0Z%
1A
0N
0[
0K"
1e"
0.#
0R$
1_$
0y$
15%
0B%
b100110011000111010100000110010 %
b100110011000111010100000110010 8
0O%
1(
b11011100011111101110001000110100 #
b11011100011111101110001000110100 c%
b101010011110000110010101110100 ,
b101010011110000110010101110100 4
b100000101001011110101000010 +
b100000101001011110101000010 5
1)
b10 '
b10 6
b10 @
b10 M
b10 Z
b10 g
b10 t
b10 #"
b10 0"
b10 ="
b10 J"
b10 W"
b10 d"
b10 q"
b10 ~"
b10 -#
b10 :#
b10 G#
b10 T#
b10 a#
b10 n#
b10 {#
b10 *$
b10 7$
b10 D$
b10 Q$
b10 ^$
b10 k$
b10 x$
b10 '%
b10 4%
b10 A%
b10 N%
b10 Y%
b11 2
b10000011011100011111101110001000110100 1
b11011100011111101110001000110100 .
b1100010101001111000011001010111010000000100000101001011110101000010 0
b100110011000111010100000110010 -
0/
#31000
b101 3
#32000
b110 3
#35000
1/
#40000
1+#
1"#
1(#
1|"
1s"
1v#
1U
1y"
1O#
1"%
1l#
1>
1K
0."
0;"
0H"
0U"
1o"
1E#
1($
0O$
0\$
1v$
12%
0L%
1c#
1[%
1B
1X
1r
1!"
0%"
02"
0?"
0L"
1f"
08#
1<#
1R#
0_#
1y#
1}#
05$
0B$
0F$
0S$
0i$
1m$
1%%
1)%
0?%
0C%
0P%
1^"
1A#
0U#
1h#
0+$
1r$
05%
0\%
1a%
0C
1H
0P
1O
1]
0b
1j
0o
1i
0w
1|
1v
1&"
0+"
13"
08"
1@"
0E"
1M"
0R"
0Z"
0_"
0g"
1l"
0t"
0##
10#
0/#
0=#
0B#
0J#
1I#
1W#
0V#
0d#
0q#
1p#
0~#
1%$
1-$
02$
0,$
1:$
0?$
09$
0G$
0L$
1T$
0Y$
1a$
0f$
0`$
0n$
0s$
0{$
1z$
0*%
1/%
17%
0<%
b11100000111011011110000111111 9
06%
1D%
0I%
1Q%
0V%
1E
0R
0y
0O"
1\"
1%#
02#
1?#
0Y#
1f#
0s#
0/$
0I$
0c$
1p$
0}$
0,%
09%
0F%
0S%
1_%
0`%
1F
1S
0T
0`
1a
0m
1n
1z
0{
0)"
16"
07"
1C"
1P"
0Q"
0]"
1j"
1w"
1r"
1&#
1!#
03#
04#
0@#
1M#
0N#
0Z#
0[#
0g#
1b#
1t#
0u#
1#$
00$
01$
1=$
0>$
0J$
0K$
1W$
0X$
1d$
0e$
0q$
1~$
0!%
1-%
0.%
0:%
0;%
1G%
0H%
1T%
0U%
b1000110101100000000101000011101 $
b1000110101100000000101000011101 b%
b1000110101100000000101000011101 e%
1<
0I
0c
0p
1,"
09"
0S"
1C#
1P#
0j#
0w#
1@$
1M$
0Z$
0t$
1W%
0=
1J
1q
1G"
0T"
0{"
1*#
07#
1Q#
0^#
1k#
1'$
1A$
1[$
0h$
1u$
1$%
11%
1>%
1K%
0]%
0D
1Q
1^
1k
1x
0'"
04"
1A"
1N"
1["
1h"
1u"
0$#
01#
1>#
0K#
0X#
1e#
1r#
1!$
0.$
0;$
0H$
0U$
1b$
1o$
1|$
1+%
08%
1E%
1R%
1Z%
1A
1N
1[
0$"
11"
1>"
1K"
1X"
1e"
0.#
1;#
1o#
1|#
0E$
1R$
1l$
1y$
1(%
1B%
b11011111010111011011111110111111 %
b11011111010111011011111110111111 8
1O%
b1000110101100000000101000011101 #
b1000110101100000000101000011101 c%
b100001111000110110000011000011 ,
b100001111000110110000011000011 4
b11111010101110100101101101100100 +
b11111010101110100101101101100100 5
1*
b0 '
b0 6
b0 @
b0 M
b0 Z
b0 g
b0 t
b0 #"
b0 0"
b0 ="
b0 J"
b0 W"
b0 d"
b0 q"
b0 ~"
b0 -#
b0 :#
b0 G#
b0 T#
b0 a#
b0 n#
b0 {#
b0 *$
b0 7$
b0 D$
b0 Q$
b0 ^$
b0 k$
b0 x$
b0 '%
b0 4%
b0 A%
b0 N%
b0 Y%
b100 2
b10000001000110101100000000101000011101 1
b1000110101100000000101000011101 .
b11000010000111100011011000001100001111111010101110100101101101100100 0
b11011111010111011011111110111111 -
0/
#41000
b111 3
#42000
b1000 3
#45000
1/
#50000
x]
xX
xO
xP
xU
xK
xB
xC
xH
x>
b11100000111011011110000111xxx 9
x[%
x<
xI
xV
xc
xp
x}
x,"
x9"
xF"
xS"
x`"
xm"
xz"
x)#
x6#
xC#
xP#
x]#
xj#
xw#
x&$
x3$
x@$
xM$
xZ$
xg$
xt$
x#%
x0%
x=%
xJ%
xW%
x=
xJ
xW
xd
xq
x~
x-"
x:"
xG"
xT"
xa"
xn"
x{"
x*#
x7#
xD#
xQ#
x^#
xk#
xx#
x'$
x4$
xA$
xN$
x[$
xh$
xu$
x$%
x1%
x>%
xK%
xX%
x\%
xa%
x(
bx "
bx d%
bx #
bx c%
bx ,
bx 4
bx +
bx 5
x*
x)
bx '
bx 6
bx @
bx M
bx Z
bx g
bx t
bx #"
bx 0"
bx ="
bx J"
bx W"
bx d"
bx q"
bx ~"
bx -#
bx :#
bx G#
bx T#
bx a#
bx n#
bx {#
bx *$
bx 7$
bx D$
bx Q$
bx ^$
bx k$
bx x$
bx '%
bx 4%
bx A%
bx N%
bx Y%
b101 2
bx 1
bx .
bx 0
bx -
0/
